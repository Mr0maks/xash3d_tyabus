image: ubuntu:xenial

stages:
  - coverity_scan
  - linux_dedicated
  - linux_desktop
  - android

variables:
  GIT_SUBMODULE_STRATEGY: recursive

cache:
  paths:
    - ccache

coverity_scan:
  stage: coverity_scan
  only:
    refs:
      - master
      - gitlabci
  before_script:
  - dpkg --add-architecture i386
  - apt update
  - apt install -y wget curl git ccache cmake p7zip-full gcc-multilib g++-multilib libx11-dev:i386 libxext-dev:i386 libgl1-mesa-dev libasound-dev zlib1g:i386 libstdc++6:i386
  - mkdir -p ccache
  #- curl -o /tmp/cov-analysis-linux64.tgz https://scan.coverity.com/download/linux64 --form project=$COVERITY_SCAN_PROJECT_NAME --form token=$COVERITY_SCAN_TOKEN
  - wget -nv -O /tmp/cov-analysis-linux64.tgz https://scan.coverity.com/download/linux64 --post-data "token=$COVERITY_SCAN_TOKEN&project=tyabus%2Fxash3d"
  - tar xfz /tmp/cov-analysis-linux64.tgz
  - export PATH="/usr/lib/ccache:$PATH"
  - export CCACHE_BASEDIR="$PWD"
  - export CCACHE_DIR="$PWD/ccache"
  - export CCACHE_COMPILERCHECK=content
  - ccache --zero-stats || true
  - ccache --show-stats || true
  after_script:
  - export CCACHE_DIR="$PWD/ccache"
  - ccache --show-stats
  script:
  - curl -s http://libsdl.org/release/SDL2-2.0.14.tar.gz | tar xzf -
  - cd $CI_PROJECT_DIR/SDL2-2.0.14/
  - export CC="gcc -msse2 -march=i686 -m32 -ggdb -O2"
  - ./configure --disable-dependency-tracking --enable-audio --enable-video --enable-events --disable-render --enable-joystick --disable-haptic --disable-power --enable-threads --enable-timers --enable-loadso --enable-video-opengl --enable-x11-shared --enable-video-x11 --enable-video-x11-xrandr --enable-video-x11-scrnsaver --enable-video-x11-xinput --disable-video-x11-xshape --disable-video-x11-xdbe --disable-libudev --disable-dbus --disable-ibus --enable-sdl-dlopen --disable-video-opengles --disable-cpuinfo --disable-assembly --disable-atomic --enable-alsa
  - make -j2
  - mkdir -p ../sdl2-linux
  - make install DESTDIR=$CI_PROJECT_DIR/sdl2-linux
  - cd ../
  - export CC="gcc -m32"
  - export CXX="gcc -m32"
  - cmake -DCMAKE_PREFIX_PATH=$CI_PROJECT_DIR/sdl2-linux/usr/local -DXASH_DOWNLOAD_DEPENDENCIES=yes -DXASH_STATIC=ON -DXASH_DLL_LOADER=ON -DXASH_VGUI=ON -DMAINUI_USE_STB=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo
  - cov-analysis-linux64-*/bin/cov-build --dir cov-int make -j1
  - cov-analysis-linux64-*/bin/cov-import-scm --dir cov-int --scm git --log cov-int/scm_log.txt 2>&1
  - tar cfz cov-int.tar.gz cov-int
  - curl https://scan.coverity.com/builds?project=$COVERITY_SCAN_PROJECT_NAME --form token=$COVERITY_SCAN_TOKEN --form email=$GITLAB_USER_EMAIL --form file=@cov-int.tar.gz --form version="`git describe --tags`" --form description="`git describe --tags` / $CI_COMMIT_TITLE / $CI_COMMIT_REF_NAME:$CI_PIPELINE_ID "

linux_desktop:
  stage: linux_desktop
  before_script:
  - dpkg --add-architecture i386
  - apt update
  - apt install -y curl ccache cmake p7zip-full gcc-multilib g++-multilib libx11-dev:i386 libxext-dev:i386 libgl1-mesa-dev libasound-dev zlib1g:i386 libstdc++6:i386
  - mkdir -p ccache
  - export PATH="/usr/lib/ccache:$PATH"
  - export CCACHE_BASEDIR="$PWD"
  - export CCACHE_DIR="$PWD/ccache"
  - export CCACHE_COMPILERCHECK=content
  - ccache --zero-stats || true
  - ccache --show-stats || true
  after_script:
  - export CCACHE_DIR="$PWD/ccache"
  - ccache --show-stats
  script:
  - curl -s http://libsdl.org/release/SDL2-2.0.14.tar.gz | tar xzf -
  - cd $CI_PROJECT_DIR/SDL2-2.0.14/
  - export CC="gcc -msse2 -march=i686 -m32 -ggdb -O2"
  - ./configure --disable-dependency-tracking --enable-audio --enable-video --enable-events --disable-render --enable-joystick --disable-haptic --disable-power --enable-threads --enable-timers --enable-loadso --enable-video-opengl --enable-x11-shared --enable-video-x11 --enable-video-x11-xrandr --enable-video-x11-scrnsaver --enable-video-x11-xinput --disable-video-x11-xshape --disable-video-x11-xdbe --disable-libudev --disable-dbus --disable-ibus --enable-sdl-dlopen --disable-video-opengles --disable-cpuinfo --disable-assembly --disable-atomic --enable-alsa
  - make -j2
  - mkdir -p ../sdl2-linux
  - make install DESTDIR=$CI_PROJECT_DIR/sdl2-linux
  - cd ../
  - mkdir out
  - cd out
  - export CC="gcc -m32"
  - export CXX="gcc -m32"
  - cmake -DCMAKE_PREFIX_PATH=$CI_PROJECT_DIR/sdl2-linux/usr/local -DXASH_DOWNLOAD_DEPENDENCIES=yes -DXASH_STATIC=ON -DXASH_DLL_LOADER=ON -DXASH_VGUI=ON -DMAINUI_USE_STB=ON -DCMAKE_BUILD_TYPE=RelWithDebInfo ../
  - make -j2
  - cp $CI_PROJECT_DIR/sdl2-linux/usr/local/lib/$(readlink $CI_PROJECT_DIR/sdl2-linux/usr/local/lib/libSDL2-2.0.so.0) libSDL2-2.0.so.0
  artifacts:
    paths:
    - scripts/xash3d.sh
    - out/engine/xash3d
    - out/mainui/libxashmenu.so
    - out/vgui_support/libvgui_support.so
    - out/vgui_support/vgui.so
    - out/libSDL2-2.0.so.0
    
linux_dedicated:
  stage: linux_dedicated
  before_script:
  - dpkg --add-architecture i386
  - apt update
  - apt install -y cmake ccache p7zip-full gcc-multilib g++-multilib zlib1g:i386 libstdc++6:i386
  - mkdir -p ccache
  - export PATH="/usr/lib/ccache:$PATH"
  - export CCACHE_BASEDIR="$PWD"
  - export CCACHE_DIR="$PWD/ccache"
  - export CCACHE_COMPILERCHECK=content
  - ccache --zero-stats || true
  - ccache --show-stats || true
  after_script:
  - export CCACHE_DIR="$PWD/ccache"
  - ccache --show-stats
  script:
  - mkdir out2
  - cd out2
  - export CC="gcc -m32"
  - export CXX="gcc -m32"
  - cmake -DXASH_DOWNLOAD_DEPENDENCIES=yes -DXASH_SDL=OFF -DXASH_DEDICATED=ON -DXASH_STATIC=ON -DXASH_DLL_LOADER=ON -DXASH_VGUI=OFF -DCMAKE_BUILD_TYPE=RelWithDebInfo ../
  - make -j2
  artifacts:
    paths:
    - out2/engine/xash3d
    
android:
  stage: android
  before_script:
  - dpkg --add-architecture i386
  - apt update
  - apt install -y curl wget cmake ccache p7zip-full gcc-multilib g++-multilib zlib1g:i386 libstdc++6:i386 openjdk-8-jdk xz-utils git python2.7 python-minimal
  - curl -s http://dl.google.com/android/android-sdk_r22.0.5-linux.tgz | tar xzf -
  - curl https://archive.apache.org/dist/ant/binaries/apache-ant-1.10.7-bin.tar.xz | tar xJ
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=${PATH}:$PWD/apache-ant-1.10.7/bin:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:$PWD/android-ndk
  - sleep 3s; echo y | android update sdk -u --filter platform-tools,build-tools-19.0.0,android-19 --force --all > /dev/null
  - sed -e 's/1\.5/1\.6/g' -i $PWD/android-sdk-linux/tools/ant/build.xml
  - wget http://dl.google.com/android/ndk/android-ndk-r10e-linux-x86_64.bin >/dev/null 2>/dev/null
  - 7z x ./android-ndk-r10e-linux-x86_64.bin > /dev/null
  - mv android-ndk-r10e android-ndk
  - mkdir -p ccache
  - export PATH="/usr/lib/ccache:$PATH"
  - export CCACHE_BASEDIR="$PWD"
  - export CCACHE_DIR="$PWD/ccache"
  - export CCACHE_COMPILERCHECK=content
  - ccache --zero-stats || true
  - ccache --show-stats || true
  after_script:
  - export CCACHE_DIR="$PWD/ccache"
  - ccache --show-stats
  script:
  - mkdir android
  - cd android
  - git clone --depth 1 https://github.com/tyabus/xash3d-android-project
  - cd xash3d-android-project
  - cp debug.keystore ~/.android/debug.keystore
  - git submodule update --init jni/src/NanoGL/nanogl xash-extras
  - git clone --depth 1 https://github.com/tyabus/hlsdk-xash3d jni/src/hlsdk-xash3d -b master
  - ln -s $CI_PROJECT_DIR jni/src/Xash3D/xash3d
  - export GIT_REV_XML=res/values/git-rev.xml
  - mkdir -p $(dirname $GIT_REV_XML)
  - echo '<?xml version="1.0" encoding="utf-8"?>' > $GIT_REV_XML
  - echo '<resources>' >> $GIT_REV_XML
  - echo -n '<string name="git_revisions">"' >> $GIT_REV_XML
  - echo -n '<b>Version information:</b> ' $*_endl| sed -e s/_endl/'\\n'/ >> $GIT_REV_XML
  - git submodule --quiet foreach --recursive 'echo -n \<b\>`basename $name`:\</b\>\ `git log --abbrev-commit --pretty=oneline -1` _endl' | sed -e 's/_endl/\\n/g' | sed -e "s/'/\\\'/g" >> $GIT_REV_XML
  - echo -n $USER@$(hostname) $(date +%H:%M:%S-%d-%m-%y) >> $GIT_REV_XML
  - echo '"</string>' >> $GIT_REV_XML
  - echo '</resources>' >> $GIT_REV_XML
  - cat $GIT_REV_XML
  - python2 scripts/makepak.py xash-extras assets/extras.pak
  - ndk-build -j2 APP_CFLAGS="-w" NDK_CCACHE=ccache
  - ln -s android/libs libs
  - ant debug -Dtest.version=1
  artifacts:
    paths:
    - android/xash3d-android-project/bin/xash3d-debug.apk